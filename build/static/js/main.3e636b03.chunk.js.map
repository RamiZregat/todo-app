{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/form/index.js","components/results/index.js","app.js","index.js"],"names":["header","props","footer","form","useState","showtext","setshowtext","id","setId","tag","setTag","crud","e","classList","remove","onClickID","target","document","getElementById","add","console","log","onSubmit","urlSend","url","value","preventDefault","formData","method","requestBody","showLoading","handleApiCall","class","name","type","className","defaultValue","onClick","results","data","JSON","stringify","undefined","App","setData","requestParams","setRequestParams","setRequestBody","loading","setLoading","useEffect","a","axios","toLowerCase","parse","Fragment","count","hideLoading","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.3e636b03.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.scss\"\n\nexport default function header(props) {\n  return (\n    <header>\n      <h1>RESTy</h1>\n    </header>\n  );\n}\n\n// class Header extends React.Component {\n//   render() {\n//     return (\n//       <header>\n//         <h1>RESTy</h1>\n//       </header>\n//     );\n//   }\n// }\n\n// export default Header;\n","import React from 'react';\nimport \"./footer.scss\"\n\nexport default function footer(props){\n  return(\n    <footer>&copy; 2018</footer>\n  )\n}\n\n// class Footer extends React.Component {\n//   render() {\n//     return <footer>&copy; 2018</footer>;\n//   }\n// }\n\n// export default Footer;\n","import React, { useState } from \"react\";\n\nimport \"./form.scss\";\n\nexport default function form(props) {\n  const [showtext, setshowtext] = useState(false);\n  const [id, setId] = useState('GET');\n  const [tag, setTag] = useState();\n\n\n  // const onClick=(e)=>{\n\n  //   crud(e)\n  // }\n\n  const crud = (e) => {\n    if(tag){\n      tag.classList.remove(\"clickedSpan\");\n    }\n    let onClickID=e.target.id\n    setTag(document.getElementById(onClickID))\n    let tagone=document.getElementById(onClickID)\n    tagone.classList.add(\"clickedSpan\");\n    setId(onClickID);\n    console.log(onClickID);\n    if (onClickID === \"POST\" || onClickID === \"PUT\") {\n      setshowtext(true);\n    } else {\n      setshowtext(false);\n    }\n  };\n  const handleSubmit = (e) => {\n    console.log(id);\n    let urlSend=\"testing purposes\"\n    if(e.target.url){\n       urlSend=e.target.url.value;\n    }\n    e.preventDefault();\n    const formData = {\n      method: id,\n      url: urlSend,\n    };\n    let requestBody='';\n    if (id === \"POST\" || id === \"PUT\") {\n      requestBody=e.target.requestBody.value;\n    }\n    props.showLoading();\n    props.handleApiCall(formData,requestBody);\n\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <span class=\"url\">URL : </span>\n          <input  name=\"url\" type=\"text\" />\n          <button data-testid='goBtn' type=\"submit\">GO!</button>\n        </label>\n        <label className=\"methods\" defaultValue=\"GET\">\n          <span id=\"GET\" onClick={crud}>\n            GET\n          </span>\n          <span id=\"POST\" onClick={crud}>\n            POST\n          </span>\n          <span id=\"PUT\" onClick={crud}>\n            PUT\n          </span>\n          <span id=\"DELETE\" onClick={crud}>\n            DELETE\n          </span>\n        </label>\n        {showtext ? <input id=\"requestBody\" /> : null}\n      </form>\n    </>\n  );\n}\n\n// class Form extends React.Component {\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     const formData = {\n//       method:'GET',\n//       url: 'https://pokeapi.co/api/v2/pokemon',\n//     };\n//     this.props.handleApiCall(formData);\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <form onSubmit={this.handleSubmit}>\n//           <label >\n//             <span>URL: </span>\n//             <input name='url' type='text' />\n//             <button type=\"submit\">GO!</button>\n//           </label>\n//           <label className=\"methods\">\n//             <span id=\"get\">GET</span>\n//             <span id=\"post\">POST</span>\n//             <span id=\"put\">PUT</span>\n//             <span id=\"delete\">DELETE</span>\n//           </label>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n\n// export default Form;\n","import React from \"react\";\nimport \"./results.scss\"\n\nexport default function results(props) {\n  return (\n    <section>\n      <pre>\n        {props.data ? JSON.stringify(props.data, undefined, 2) : null}\n      </pre>\n    </section>\n  );\n}\n\n// class Results extends React.Component {\n//   render() {\n//     return (\n//       <section>\n//         <pre>{this.props.data ? JSON.stringify(this.props.data, undefined, 2) : null}</pre>\n//       </section>\n//     );\n//   }\n// }\n\n// export default Results;\n","import React, { useEffect, useState } from 'react';\n\nimport './app.scss';\n\n// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport axios from 'axios';\n\nexport default function App(props){\nconst [data,setData]=useState(null);\nconst [requestParams,setRequestParams]=useState({});\nconst [requestBody,setRequestBody]=useState({});\nconst [loading,setLoading]=useState(false);\n\n\nuseEffect(async () => {\n  if (requestParams.url) {\n    if (requestBody) {\n      const data = await axios[requestParams.method.toLowerCase()](requestParams.url, JSON.parse(requestBody));\n      setData(data);\n\n\n    } else {\n      const data = await axios[requestParams.method.toLowerCase()](requestParams.url);\n      setData(data);\n\n\n    }\n  }\n  setLoading(false);\n}, [requestParams]);\n\n\nconst callApi=(requestParams,requestBody)=>{\n  const data = {\n    count: 2,\n    results: [\n      {name: 'fake thing 1', url: 'http://fakethings.com/1'},\n      {name: 'fake thing 2', url: 'http://fakethings.com/2'},\n    ],\n  };\n  setData(data);\n  setRequestBody(requestBody);\n  setRequestParams(requestParams);\n\n}\nconst showLoading=()=>{\n  setLoading(true);\n}\nconst hideLoading=()=>{\n  setLoading(false);\n}\n\nreturn (\n  <React.Fragment>\n    <Header />\n    {loading?(\n      <>\n     <div class=\"spinner\"></div>\n      </>\n    ):(\n      <>\n    <div data-testid='request'>Request Method: {requestParams.method}</div>\n    <div data-testid='urlText'>URL: {requestParams.url}</div>\n    <Form handleApiCall={callApi} showLoading={showLoading} hideLoading={hideLoading}/>\n    <Results data={data} />\n    </>\n    )}\n    <Footer />\n  </React.Fragment>\n);\n}\n\n\n// class App extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: null,\n//       requestParams: {},\n//     };\n//   }\n\n//   callApi = (requestParams) => {\n//     // mock output\n//     const data = {\n//       count: 2,\n//       results: [\n//         {name: 'fake thing 1', url: 'http://fakethings.com/1'},\n//         {name: 'fake thing 2', url: 'http://fakethings.com/2'},\n//       ],\n//     };\n//     this.setState({data, requestParams});\n//   }\n\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <Header />\n//         <div>Request Method: {this.state.requestParams.method}</div>\n//         <div>URL: {this.state.requestParams.url}</div>\n//         <Form handleApiCall={this.callApi} />\n//         <Results data={this.state.data} />\n//         <Footer />\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}