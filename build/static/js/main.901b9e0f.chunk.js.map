{"version":3,"sources":["components/setting/setting.js","hooks/form.js","components/todo/pages.js","components/todo/todo.js","components/header/header.js","app.js","index.js"],"names":["ListContext","React","createContext","Setting","props","useState","list","setList","incomplete","setIncomplete","showResult","setShowResult","postsPerPage","currentPage","setCurrentPage","useEffect","incompleteCount","filter","item","complete","length","document","title","Provider","value","addItem","console","log","id","uuid","deleteItem","items","toggleComplete","map","children","useForm","callback","useContext","values","setValues","handleChange","event","persist","target","name","handleSubmit","preventDefault","Pages","totalPosts","paginate","pageNumbers","i","Math","ceil","push","className","number","onClick","ToDo","indexOfLastPost","indexOfFirstPost","currentPost","slice","onSubmit","label","labelInfo","required","onChange","placeholder","type","intent","Intent","PRIMARY","labelFor","defaultValue","min","max","DANGER","text","assignee","difficulty","toString","pageNumber","Header","Group","Heading","align","Alignment","RIGHT","Divider","to","icon","App","exact","path","Component","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.901b9e0f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nexport const ListContext = React.createContext();\nimport { v4 as uuid } from 'uuid';\n\n\n  function Setting(props) {\n    const [list, setList] = useState([]);\n    const [incomplete, setIncomplete] = useState([]);\n    const [showResult,setShowResult]=useState(false)\n    const [postsPerPage,setPostsPerPage]=useState(3)\n    const [currentPage,setCurrentPage]=useState(1);\n\n\n    function addItem(item) {\n        console.log(item);\n        item.id = uuid();\n        item.complete = false;\n        setList([...list, item]);\n      }\n    \n      function deleteItem(id) {\n        const items = list.filter( item => item.id !== id );\n        setList(items);\n      }\n    \n      function toggleComplete(id) {\n    \n        const items = list.map( item => {\n          if ( item.id == id ) {\n            item.complete = ! item.complete;\n          }\n          return item;\n        });\n        \n        setList(items);\n    \n      }\n    \n      useEffect(() => {\n        let incompleteCount = list.filter(item => !item.complete).length;\n        setIncomplete(incompleteCount);\n        document.title = `To Do List: ${incomplete}`;\n      }, [list]);\n\n    return (\n            <ListContext.Provider value={{\n                list,\n                incomplete,\n                addItem,\n                deleteItem,\n                toggleComplete,\n                setShowResult,\n                showResult,\n                postsPerPage,\n                currentPage,\n                setCurrentPage\n            }}>\n            {props.children}\n         </ListContext.Provider>\n    );\n}\n\nexport default Setting;","import { useContext, useState } from 'react';\nimport { ListContext } from '../components/setting/setting';\nconst useForm = (callback) => {\nconst {setShowResult}=useContext(ListContext)\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n    setShowResult(true);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React from 'react';\n\nconst Pages = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <a onClick={() => paginate(number)} className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pages;","import React, { useContext, useEffect, useState } from 'react';\nimport useForm from '../../hooks/form.js';\nimport { FormGroup, InputGroup, Intent, H1 } from '@blueprintjs/core';\nimport {ListContext} from '../setting/setting.js';\nimport Pages from './pages';\n\nimport './todo.scss';\n\nconst ToDo = () => {\n\n  const {addItem,incomplete,list,toggleComplete,showResult,setCurrentPage,currentPage,postsPerPage,deleteItem}=useContext(ListContext)\n\n  const { handleChange, handleSubmit } = useForm(addItem);\n  const indexOfLastPost=currentPage*postsPerPage;\n  const indexOfFirstPost=indexOfLastPost-postsPerPage;\n  const currentPost=list.slice(indexOfFirstPost,indexOfLastPost)\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n\n  return (\n    <>\n    <h1 id='heading'>To Do List Manager: {incomplete}</h1>\n    <div className=\"line-up\">\n    <div className=\"form1\">\n    <H1>Add To Do Item</H1>\n    <form onSubmit={handleSubmit}>\n      <FormGroup>\n        <FormGroup label=\"To-Do item\" labelInfo=\"(required)\" required=\"true\"> \n          <InputGroup\n            onChange={handleChange}\n            name=\"text\"\n            placeholder=\"Item Details\"\n            type=\"text\"\n            intent={Intent.PRIMARY}\n          />\n        </FormGroup>\n        <FormGroup label=\"Assigned To\" labelFor=\"text-input\" labelInfo=\"(required)\" required=\"true\">\n          <InputGroup onChange={handleChange} name=\"assignee\" placeholder=\"Assignee Name\" type=\"text\" intent={Intent.PRIMARY} />\n        </FormGroup>\n        <FormGroup label=\"Difficulty\" labelFor=\"range\">\n          <input\n            className=\"deff\"\n            onChange={handleChange}\n            defaultValue={2}\n            type=\"range\"\n            min={1}\n            max={5}\n            name=\"difficulty\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <InputGroup type=\"submit\" intent={Intent.DANGER} value='Add Item'/>\n        </FormGroup>\n      </FormGroup>\n    </form>\n  </div>\n  {showResult?( \n     <div className=\"result\">\n  {currentPost.map(item => (\n        <div className=\"toDoListItem\" key={item.id}>\n          <p>{item.text}</p>\n          <p><small>Assigned to: {item.assignee}</small></p>\n          <p><small>Difficulty: {item.difficulty}</small></p>\n          <div className=\"completeStatus\" onClick={() => toggleComplete(item.id)}>Complete: {item.complete.toString()}</div>\n          <hr />\n        </div>\n      ))}\n      <Pages\n              postsPerPage={postsPerPage}\n              totalPosts={list.length}\n              paginate={paginate}\n      />\n      </div>):null}\n\n      </div>\n      </>\n  );\n};\n\nexport default ToDo;\n","import React, { useContext } from 'react';\nimport { Navbar, Button, Alignment } from '@blueprintjs/core';\nimport './header.scss';\nimport {ListContext} from '../setting/setting.js';\nimport { Link } from 'react-router-dom';\n\nfunction Header(props) {\n    const {incomplete}=useContext(ListContext);\n    return (\n        <>\n            <Navbar className=\"bp3-navbar bp3-dark\">\n        <Navbar.Group>\n          <Navbar.Heading>To Do List: {incomplete} items pending</Navbar.Heading>\n        </Navbar.Group>\n        <Navbar.Group align={Alignment.RIGHT}>\n          <Navbar.Divider />\n          <Link to=\"/\">\n            <Button className=\"bp3-minimal\" icon=\"home\" text=\"Home\" />\n          </Link>\n          </Navbar.Group>\n          </Navbar>\n        </>\n    );\n}\n\nexport default Header;\n\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ToDo from './components/todo/todo.js';\nimport Setting from './components/setting/setting'\nimport Header from './components/header/header.js';\n\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Setting>\n        <BrowserRouter>\n        <Header/>\n        <Route exact path=\"/\">\n      <ToDo />\n      </Route>\n      </BrowserRouter>\n      </Setting>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}